/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("address_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address_out";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("ready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bus_gave")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bus_gave[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus_gave";
}

SIGNAL("bus_gave[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus_gave";
}

SIGNAL("bus_gave[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus_gave";
}

SIGNAL("bus_request[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bus_request[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bus_request[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bus_slave_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bus_slave_0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus_slave_0";
}

SIGNAL("bus_slave_0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus_slave_0";
}

SIGNAL("bus_slave_0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus_slave_0";
}

SIGNAL("bus_slave_0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus_slave_0";
}

SIGNAL("bus_slave_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus_slave_0";
}

SIGNAL("gave")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("gave[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "gave";
}

SIGNAL("gave[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "gave";
}

SIGNAL("gave[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "gave";
}

SIGNAL("q0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q0";
}

SIGNAL("q0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q0";
}

SIGNAL("q0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q0";
}

SIGNAL("q0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q0";
}

SIGNAL("q0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q0";
}

SIGNAL("q0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q0";
}

SIGNAL("q0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q0";
}

SIGNAL("q0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q0";
}

SIGNAL("q1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q1";
}

SIGNAL("q1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q1";
}

SIGNAL("q1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q1";
}

SIGNAL("q1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q1";
}

SIGNAL("q1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q1";
}

SIGNAL("q1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q1";
}

SIGNAL("q1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q1";
}

SIGNAL("q1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q1";
}

SIGNAL("q2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q2";
}

SIGNAL("q2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q2";
}

SIGNAL("q2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q2";
}

SIGNAL("q2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q2";
}

SIGNAL("q2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q2";
}

SIGNAL("q2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q2";
}

SIGNAL("q2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q2";
}

SIGNAL("q2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q2";
}

SIGNAL("sload")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("work")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("work[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "work";
}

SIGNAL("work[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "work";
}

SIGNAL("work[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "work";
}

SIGNAL("clk_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("address_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("address_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("address_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("address_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("ready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 295.0;
	}
}

TRANSITION_LIST("bus_gave[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 305.0;
	}
}

TRANSITION_LIST("bus_gave[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 155.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 505.0;
	}
}

TRANSITION_LIST("bus_gave[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 385.0;
	}
}

TRANSITION_LIST("bus_request[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 275.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 425.0;
	}
}

TRANSITION_LIST("bus_request[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 190.0;
		LEVEL 0 FOR 535.0;
	}
}

TRANSITION_LIST("bus_request[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 345.0;
	}
}

TRANSITION_LIST("bus_slave_0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("bus_slave_0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("bus_slave_0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("bus_slave_0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("bus_slave_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 305.0;
	}
}

TRANSITION_LIST("gave[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 345.0;
	}
}

TRANSITION_LIST("gave[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 535.0;
	}
}

TRANSITION_LIST("gave[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 275.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 425.0;
	}
}

TRANSITION_LIST("q0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 130.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 435.0;
	}
}

TRANSITION_LIST("q0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 325.0;
	}
}

TRANSITION_LIST("q0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 305.0;
	}
}

TRANSITION_LIST("q0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 190.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 305.0;
	}
}

TRANSITION_LIST("q1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 385.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 345.0;
	}
}

TRANSITION_LIST("q1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 305.0;
	}
}

TRANSITION_LIST("q1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 305.0;
	}
}

TRANSITION_LIST("q1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 140.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 305.0;
	}
}

TRANSITION_LIST("q2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 325.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 355.0;
	}
}

TRANSITION_LIST("q2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 185.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 415.0;
	}
}

TRANSITION_LIST("q2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 355.0;
	}
}

TRANSITION_LIST("q2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 155.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 110.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 355.0;
	}
}

TRANSITION_LIST("sload")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 980.0;
	}
}

TRANSITION_LIST("work[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 450.0;
	}
}

TRANSITION_LIST("work[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 720.0;
	}
}

TRANSITION_LIST("work[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 450.0;
	}
}

TRANSITION_LIST("clk_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 115.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 5.0;
			}
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 35.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 310.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sload";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "work";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "work[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "work[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "work[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "address_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "address_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "ready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bus_gave";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "bus_gave[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "bus_gave[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "bus_gave[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "bus_request[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bus_request[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bus_request[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bus_slave_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "bus_slave_0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "bus_slave_0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "bus_slave_0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "bus_slave_0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "bus_slave_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "gave";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	CHILDREN = 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "gave[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "gave[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "gave[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "q2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "q2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "q2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "q2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "q2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "q2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "q2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "q2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "q2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "q1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "q1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "q1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "q1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "q1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "q1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "q1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "q1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "q1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "q0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
	CHILDREN = 64, 65, 66, 67, 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "q0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "q0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "q0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "q0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "q0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "q0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "q0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "q0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "clk_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
